###############################################################################
#
# Â© Copyright IBM Corp. 2020, 2023
#
###############################################################################
apiVersion: eventstreams.ibm.com/v1beta2
kind: EventStreams
metadata:
  name: minimal-prod
spec:
  version: latest
  license:
    # By installing this product you accept the license terms at https://ibm.biz/ea-license
    accept: false
    license: ""
    use: ""
  adminApi:
    endpoints:
      - name: ingress
        type: ingress
        host: <HOSTNAME>
        class: <INGRESS-CLASS>
        containerPort: 8001
  adminUI:
    authentication:
      - type: scram-sha-512
    endpoints:
      - name: ingress
        type: ingress
        host: <HOSTNAME>
        class: <INGRESS-CLASS>
        containerPort: 3000
  apicurioRegistry:
    endpoints:
      - name: ingress
        type: ingress
        host: <HOSTNAME>
        class: <INGRESS-CLASS>
        containerPort: 8002
  restProducer:
    endpoints:
      - name: ingress
        type: ingress
        host: <HOSTNAME>
        class: <INGRESS-CLASS>
        containerPort: 8003
  strimziOverrides:
    kafka:
      replicas: 3
      authorization:
        type: custom
        supportsAdminApi: true
        authorizerClass: com.ibm.eventstreams.runas.authorizer.RunAsAuthorizer
      config:
        inter.broker.protocol.version: "3.5"
        log.cleaner.threads: 6
        num.io.threads: 24
        num.network.threads: 9
        num.replica.fetchers: 3
        offsets.topic.replication.factor: 3
        default.replication.factor: 3
        min.insync.replicas: 2
      listeners:
        - name: external
          port: 9094
          type: ingress
          tls: true
          authentication:
            type: scram-sha-512
          configuration:
            bootstrap:
              host: <HOSTNAME>
            brokers:
              - broker: 0
                host: <HOSTNAME>
              - broker: 1
                host: <HOSTNAME>
              - broker: 2
                host: <HOSTNAME>
            class: <INGRESS-CLASS>
        - name: tls
          port: 9093
          type: internal
          tls: true
          authentication:
            type: tls
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: kafka-metrics-config.yaml
            name: minimal-prod-metrics-config
      resources:
        requests:
          memory: 128Mi
          cpu: 100m
        limits:
          memory: 2048Mi
          cpu: 1000m
      storage:
        type: persistent-claim
        size: 4Gi
        class: <STORAGE-CLASS>
    zookeeper:
      replicas: 3
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: zookeeper-metrics-config.yaml
            name: minimal-prod-metrics-config
      storage:
        type: persistent-claim
        size: 2Gi
        class: <STORAGE-CLASS>
